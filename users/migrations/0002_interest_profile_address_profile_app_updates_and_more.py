# Generated by Django 5.1.5 on 2025-01-15 19:11

import django.core.validators
import django.db.models.deletion
import users.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Interest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MUSIC', 'Music'), ('MOVIES', 'Movies & TV'), ('SPORTS', 'Sports'), ('TRAVEL', 'Travel'), ('FOOD', 'Food & Dining'), ('FITNESS', 'Fitness & Health'), ('READING', 'Reading'), ('GAMING', 'Gaming'), ('ART', 'Art & Culture'), ('TECH', 'Technology'), ('OUTDOORS', 'Outdoor Activities'), ('PETS', 'Pets'), ('COOKING', 'Cooking'), ('PHOTOGRAPHY', 'Photography'), ('FASHION', 'Fashion')], max_length=50, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='profile',
            name='address',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='profile',
            name='app_updates',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='country',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='current_address',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='profile',
            name='current_country',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='current_state',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='device_token',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AddField(
            model_name='profile',
            name='email_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='in_app_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='is_verified',
            field=models.CharField(choices=[('UNVERIFIED', 'Not Verified'), ('PENDING', 'Verification Pending'), ('VERIFIED', 'Verified'), ('REJECTED', 'Verification Rejected')], default='Verification Pending', max_length=50),
        ),
        migrations.AddField(
            model_name='profile',
            name='lga',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='likes_received_notitication',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='maximum_age_preference',
            field=models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='profile',
            name='maximum_distance_preference',
            field=models.IntegerField(default=100, help_text='Maximum distance in kilometers'),
        ),
        migrations.AddField(
            model_name='profile',
            name='minimum_age_preference',
            field=models.IntegerField(default=18, validators=[django.core.validators.MinValueValidator(18), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='profile',
            name='new_matches_notitication',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='new_messages_notitication',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='profile_view_notitication',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='profile_visibility',
            field=models.CharField(choices=[('VE', 'Visible to Everyone'), ('VM', 'Visible to Matches Only'), ('PP', 'Private Profile')], default='VE', max_length=2),
        ),
        migrations.AddField(
            model_name='profile',
            name='push_notifications',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='show_distance',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='show_last_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='show_online_status',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='state',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='profile',
            name='user_status',
            field=models.CharField(choices=[('PA', 'Pending Approval'), ('A', 'Active'), ('S', 'Suspended'), ('B', 'Banned'), ('D', 'Deactivated')], default='PA', max_length=2),
        ),
        migrations.AddField(
            model_name='user',
            name='device_token',
            field=models.CharField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='profile',
            name='interests',
            field=models.ManyToManyField(blank=True, to='users.interest'),
        ),
        migrations.CreateModel(
            name='UserAudioRecording',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio_file', models.FileField(upload_to='user_audio/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['mp3', 'wav', 'm4a']), users.models.validate_file_size])),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(300)])),
                ('is_public', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audio_recordings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video_file', models.FileField(upload_to='user_videos/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'mov', 'avi']), users.models.validate_video_size])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='video_thumbnails/%Y/%m/')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('duration', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(600)])),
                ('video_type', models.CharField(choices=[('PROFILE', 'Profile Video'), ('STORY', 'Story Video'), ('POST', 'Post Video')], default='POST', max_length=10)),
                ('is_public', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autoplay_videos', models.BooleanField(default=True)),
                ('video_quality', models.CharField(choices=[('AUTO', 'Auto'), ('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High')], default='AUTO', max_length=10)),
                ('save_to_device', models.BooleanField(default=False)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='video_preferences', to='users.profile')),
            ],
        ),
        migrations.CreateModel(
            name='UserBlock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks_received', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocks_made', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'blocked_user')},
            },
        ),
        migrations.CreateModel(
            name='UserPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='user_photos/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('is_primary', models.BooleanField(default=False)),
                ('order', models.PositiveIntegerField(default=0)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['order', '-created_at'],
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('user',), name='unique_primary_photo')],
            },
        ),
    ]
