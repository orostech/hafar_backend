# Generated by Django 5.1.5 on 2025-03-01 07:25

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Boost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration', models.PositiveIntegerField(choices=[(3600, '1 Hour'), (21600, '6 Hours'), (86400, '24 Hours')])),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SwipeLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_likes_count', models.PositiveIntegerField(default=0)),
                ('daily_super_likes_count', models.PositiveIntegerField(default=0)),
                ('daily_free_super_likes', models.PositiveIntegerField(default=1)),
                ('last_reset', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSwipeAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('LIKE', 'Like'), ('DISLIKE', 'Dislike'), ('SUPERLIKE', 'Super Like')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('target_age', models.IntegerField()),
                ('target_distance', models.FloatField()),
                ('common_interests_count', models.IntegerField()),
                ('lifestyle_similarity_score', models.FloatField()),
                ('target_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_swipes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='swipe_actions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Dislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('disliked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dislikes_received', to=settings.AUTH_USER_MODEL)),
                ('disliker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dislikes_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['disliker', 'disliked'], name='match_disli_dislike_783e05_idx')],
                'unique_together': {('disliker', 'disliked')},
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like_type', models.CharField(choices=[('REGULAR', 'Regular Like'), ('SUPER', 'Super Like')], default='REGULAR', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('liked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_received', to=settings.AUTH_USER_MODEL)),
                ('liker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['liker', 'liked', 'is_active'], name='match_like_liker_i_416d54_idx')],
                'unique_together': {('liker', 'liked', 'is_active')},
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_interaction', models.DateTimeField(auto_now=True)),
                ('is_premium', models.BooleanField(default=False)),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user1', 'user2')},
            },
        ),
        migrations.CreateModel(
            name='UserPreferenceWeight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_weight', models.FloatField(default=0.3)),
                ('age_weight', models.FloatField(default=0.2)),
                ('interests_weight', models.FloatField(default=0.3)),
                ('lifestyle_weight', models.FloatField(default=0.2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.CheckConstraint(condition=models.Q(('distance_weight__gte', 0), ('distance_weight__lte', 1), ('age_weight__gte', 0), ('age_weight__lte', 1), ('interests_weight__gte', 0), ('interests_weight__lte', 1), ('lifestyle_weight__gte', 0), ('lifestyle_weight__lte', 1)), name='weights_between_0_and_1')],
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visited', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visited_by', to=settings.AUTH_USER_MODEL)),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('visitor', 'visited')},
            },
        ),
    ]
